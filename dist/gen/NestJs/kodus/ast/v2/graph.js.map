{"version":3,"file":"graph.js","sourceRoot":"","sources":["../../../../../../gen/NestJs/kodus/ast/v2/graph.ts"],"names":[],"mappings":";AAAA,sDAAsD;AACtD,YAAY;AACZ,gCAAgC;AAChC,iCAAiC;AACjC,mCAAmC;;;AAKnC,IAAY,QAWX;AAXD,WAAY,QAAQ;IAClB,2DAA+C,CAAA;IAC/C,6CAAiC,CAAA;IACjC,iDAAqC,CAAA;IACrC,+CAAmC,CAAA;IACnC,uDAA2C,CAAA;IAC3C,yDAA6C,CAAA;IAC7C,6CAAiC,CAAA;IACjC,qDAAyC,CAAA;IACzC,+DAAmD,CAAA;IACnD,yCAA6B,CAAA;AAC/B,CAAC,EAXW,QAAQ,wBAAR,QAAQ,QAWnB","sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.0\n//   protoc               unknown\n// source: kodus/ast/v2/graph.proto\n\n/* eslint-disable */\nimport { Range } from \"./tree_sitter\";\n\nexport enum NodeType {\n  NODE_TYPE_UNSPECIFIED = \"NODE_TYPE_UNSPECIFIED\",\n  NODE_TYPE_FILE = \"NODE_TYPE_FILE\",\n  NODE_TYPE_IMPORT = \"NODE_TYPE_IMPORT\",\n  NODE_TYPE_CLASS = \"NODE_TYPE_CLASS\",\n  NODE_TYPE_INTERFACE = \"NODE_TYPE_INTERFACE\",\n  NODE_TYPE_TYPE_ALIAS = \"NODE_TYPE_TYPE_ALIAS\",\n  NODE_TYPE_ENUM = \"NODE_TYPE_ENUM\",\n  NODE_TYPE_FUNCTION = \"NODE_TYPE_FUNCTION\",\n  NODE_TYPE_FUNCTION_CALL = \"NODE_TYPE_FUNCTION_CALL\",\n  UNRECOGNIZED = \"UNRECOGNIZED\",\n}\n\n/** Represents a scope */\nexport interface Scope {\n  type: NodeType;\n  name: string;\n}\n\n/** Represents a function call */\nexport interface Call {\n  nodeId: number;\n  function: string;\n  file: string;\n  caller?: string | undefined;\n}\n\n/** Represents file analysis information */\nexport interface FileAnalysis {\n  defines: string[];\n  calls: Call[];\n  imports: string[];\n  className: string[];\n  usedBy?: FileAnalysis_UsedBy | undefined;\n  dependencies?: FileAnalysis_Dependencies | undefined;\n  nodes: Map<number, AnalysisNode>;\n}\n\nexport interface FileAnalysis_UsedBy {\n  files: string[];\n  functions: string[];\n  types: string[];\n}\n\nexport interface FileAnalysis_Dependencies {\n  direct: string[];\n  transitive: string[];\n}\n\nexport interface FileAnalysis_NodesEntry {\n  key: number;\n  value: AnalysisNode | undefined;\n}\n\n/** Represents detailed function analysis */\nexport interface FunctionAnalysis {\n  nodeId: number;\n  position: Range | undefined;\n  file: string;\n  name: string;\n  params: string[];\n  lines: number;\n  returnType: string;\n  calls: Call[];\n  className?: string | undefined;\n  startLine: number;\n  endLine: number;\n  functionHash: string;\n  signatureHash: string;\n  fullText?: string | undefined;\n}\n\n/** Represents detailed type analysis */\nexport interface TypeAnalysis {\n  nodeId: number;\n  position: Range | undefined;\n  file: string;\n  type: NodeType;\n  name: string;\n  fields: Map<string, string>;\n  implements: string[];\n  implementedBy: string[];\n  extends: string[];\n  extendedBy: string[];\n  scope: Scope[];\n}\n\nexport interface TypeAnalysis_FieldsEntry {\n  key: string;\n  value: string;\n}\n\n/** Represents a node in the analysis tree */\nexport interface AnalysisNode {\n  id: number;\n  name: string;\n  text: string;\n  type: NodeType;\n  children: AnalysisNode[];\n  position: Range | undefined;\n}\n\n/** Represents the complete code graph */\nexport interface CodeGraph {\n  files: Map<string, FileAnalysis>;\n  functions: Map<string, FunctionAnalysis>;\n  types: Map<string, TypeAnalysis>;\n}\n\nexport interface CodeGraph_FilesEntry {\n  key: string;\n  value: FileAnalysis | undefined;\n}\n\nexport interface CodeGraph_FunctionsEntry {\n  key: string;\n  value: FunctionAnalysis | undefined;\n}\n\nexport interface CodeGraph_TypesEntry {\n  key: string;\n  value: TypeAnalysis | undefined;\n}\n"]}