{"version":3,"file":"analyzer.js","sourceRoot":"","sources":["../../../../../../gen/NestJs/kodus/ast/v1/analyzer.ts"],"names":[],"mappings":";;;AAyEA,kFAaC;AA/ED,yDAAqE;AAGrE,IAAY,YAcX;AAdD,WAAY,YAAY;IACtB,yFAA6B,CAAA;IAC7B,+EAAwB,CAAA;IACxB,+EAAwB,CAAA;IACxB,2EAAsB,CAAA;IACtB,6EAAuB,CAAA;IACvB,+EAAwB,CAAA;IACxB,iFAAyB,CAAA;IACzB,iFAAyB,CAAA;IACzB,2FAA8B,CAAA;IAC9B,yFAA6B,CAAA;IAC7B,sFAA4B,CAAA;IAC5B,sFAA4B,CAAA;IAC5B,gEAAiB,CAAA;AACnB,CAAC,EAdW,YAAY,4BAAZ,YAAY,QAcvB;AAED,IAAY,QAKX;AALD,WAAY,QAAQ;IAClB,yEAAyB,CAAA;IACzB,6DAAmB,CAAA;IACnB,6DAAmB,CAAA;IACnB,wDAAiB,CAAA;AACnB,CAAC,EALW,QAAQ,wBAAR,QAAQ,QAKnB;AA0CD,SAAgB,mCAAmC;IACjD,OAAO,UAAU,WAAqB;QACpC,MAAM,WAAW,GAAa,CAAC,oBAAoB,CAAC,CAAC;QACrD,KAAK,MAAM,MAAM,IAAI,WAAW,EAAE,CAAC;YACjC,MAAM,UAAU,GAAQ,OAAO,CAAC,wBAAwB,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACxF,IAAA,0BAAU,EAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAC9F,CAAC;QACD,MAAM,iBAAiB,GAAa,EAAE,CAAC;QACvC,KAAK,MAAM,MAAM,IAAI,iBAAiB,EAAE,CAAC;YACvC,MAAM,UAAU,GAAQ,OAAO,CAAC,wBAAwB,CAAC,WAAW,CAAC,SAAS,EAAE,MAAM,CAAC,CAAC;YACxF,IAAA,gCAAgB,EAAC,oBAAoB,EAAE,MAAM,CAAC,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QACpG,CAAC;IACH,CAAC,CAAC;AACJ,CAAC;AAEY,QAAA,yBAAyB,GAAG,oBAAoB,CAAC","sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.0\n//   protoc               unknown\n// source: kodus/ast/v1/analyzer.proto\n\n/* eslint-disable */\nimport { GrpcMethod, GrpcStreamMethod } from \"@nestjs/microservices\";\nimport { Observable } from \"rxjs\";\n\nexport enum PlatformType {\n  PLATFORM_TYPE_UNSPECIFIED = 0,\n  PLATFORM_TYPE_GITHUB = 1,\n  PLATFORM_TYPE_GITLAB = 2,\n  PLATFORM_TYPE_JIRA = 3,\n  PLATFORM_TYPE_SLACK = 4,\n  PLATFORM_TYPE_NOTION = 5,\n  PLATFORM_TYPE_MSTEAMS = 6,\n  PLATFORM_TYPE_DISCORD = 7,\n  PLATFORM_TYPE_AZURE_BOARDS = 8,\n  PLATFORM_TYPE_AZURE_REPOS = 9,\n  PLATFORM_TYPE_KODUS_WEB = 10,\n  PLATFORM_TYPE_BITBUCKET = 11,\n  UNRECOGNIZED = -1,\n}\n\nexport enum AuthMode {\n  AUTH_MODE_UNSPECIFIED = 0,\n  AUTH_MODE_OAUTH = 1,\n  AUTH_MODE_TOKEN = 2,\n  UNRECOGNIZED = -1,\n}\n\nexport interface BuildEnrichedGraphRequest {\n  baseRepo: CloneRepositoryRequest | undefined;\n  headRepo: CloneRepositoryRequest | undefined;\n}\n\nexport interface BuildEnrichedGraphResponse {\n  chunk: string;\n}\n\nexport interface Auth {\n  type?: AuthMode | undefined;\n  token?: string | undefined;\n  org?: string | undefined;\n}\n\nexport interface CloneRepositoryRequest {\n  url: string;\n  provider: PlatformType;\n  branch?: string | undefined;\n  auth?: Auth | undefined;\n  organizationId: string;\n  repositoryId: string;\n  repositoryName: string;\n}\n\nexport interface DeleteRepositoryRequest {\n  organizationId: string;\n  repositoryId: string;\n  repositoryName: string;\n  branchName: string;\n}\n\nexport interface ASTAnalyzerServiceClient {\n  buildEnrichedGraph(request: BuildEnrichedGraphRequest): Observable<BuildEnrichedGraphResponse>;\n}\n\nexport interface ASTAnalyzerServiceController {\n  buildEnrichedGraph(request: BuildEnrichedGraphRequest): Observable<BuildEnrichedGraphResponse>;\n}\n\nexport function ASTAnalyzerServiceControllerMethods() {\n  return function (constructor: Function) {\n    const grpcMethods: string[] = [\"buildEnrichedGraph\"];\n    for (const method of grpcMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcMethod(\"ASTAnalyzerService\", method)(constructor.prototype[method], method, descriptor);\n    }\n    const grpcStreamMethods: string[] = [];\n    for (const method of grpcStreamMethods) {\n      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);\n      GrpcStreamMethod(\"ASTAnalyzerService\", method)(constructor.prototype[method], method, descriptor);\n    }\n  };\n}\n\nexport const AST_ANALYZER_SERVICE_NAME = \"ASTAnalyzerService\";\n"]}