{"version":3,"file":"graph.js","sourceRoot":"","sources":["../../gen/NestJs/kodus/ast/v2/graph.ts"],"names":[],"mappings":";;;AASA,IAAY,SASX;AATD,WAAY,SAAS;IACnB,6EAA0B,CAAA;IAC1B,+DAAmB,CAAA;IACnB,iEAAoB,CAAA;IACpB,yEAAwB,CAAA;IACxB,+DAAmB,CAAA;IACnB,uEAAuB,CAAA;IACvB,mEAAqB,CAAA;IACrB,0DAAiB,CAAA;AACnB,CAAC,EATW,SAAS,yBAAT,SAAS,QASpB;AAGD,IAAY,SAWX;AAXD,WAAY,SAAS;IACnB,6EAA0B,CAAA;IAC1B,mEAAqB,CAAA;IACrB,iEAAoB,CAAA;IACpB,yEAAwB,CAAA;IACxB,+DAAmB,CAAA;IACnB,2EAAyB,CAAA;IACzB,uEAAuB,CAAA;IACvB,iFAA4B,CAAA;IAC5B,6FAAkC,CAAA;IAClC,0DAAiB,CAAA;AACnB,CAAC,EAXW,SAAS,yBAAT,SAAS,QAWpB","sourcesContent":["// Code generated by protoc-gen-ts_proto. DO NOT EDIT.\n// versions:\n//   protoc-gen-ts_proto  v2.7.0\n//   protoc               unknown\n// source: kodus/ast/v2/graph.proto\n\n/* eslint-disable */\n\n/** Enum for scope types */\nexport enum ScopeType {\n  SCOPE_TYPE_UNSPECIFIED = 0,\n  SCOPE_TYPE_FILE = 1,\n  SCOPE_TYPE_CLASS = 2,\n  SCOPE_TYPE_INTERFACE = 3,\n  SCOPE_TYPE_ENUM = 4,\n  SCOPE_TYPE_FUNCTION = 5,\n  SCOPE_TYPE_METHOD = 6,\n  UNRECOGNIZED = -1,\n}\n\n/** Enum for type kind */\nexport enum QueryType {\n  QUERY_TYPE_UNSPECIFIED = 0,\n  QUERY_TYPE_IMPORT = 1,\n  QUERY_TYPE_CLASS = 2,\n  QUERY_TYPE_INTERFACE = 3,\n  QUERY_TYPE_ENUM = 4,\n  QUERY_TYPE_TYPE_ALIAS = 5,\n  QUERY_TYPE_FUNCTION = 6,\n  QUERY_TYPE_FUNCTION_CALL = 7,\n  QUERY_TYPE_FUNCTION_PARAMETERS = 8,\n  UNRECOGNIZED = -1,\n}\n\n/** Represents a scope */\nexport interface Scope {\n  type: ScopeType;\n  name: string;\n}\n\n/** Represents a function call */\nexport interface Call {\n  nodeId: number;\n  function: string;\n  file: string;\n  caller?: string | undefined;\n}\n\n/** Represents file analysis information */\nexport interface FileAnalysis {\n  defines: string[];\n  calls: Call[];\n  imports: string[];\n  className: string[];\n  usedBy?: FileAnalysis_UsedBy | undefined;\n  dependencies?: FileAnalysis_Dependencies | undefined;\n}\n\nexport interface FileAnalysis_UsedBy {\n  files: string[];\n  functions: string[];\n  types: string[];\n}\n\nexport interface FileAnalysis_Dependencies {\n  direct: string[];\n  transitive: string[];\n}\n\n/** Represents detailed function analysis */\nexport interface FunctionAnalysis {\n  nodeId: number;\n  file: string;\n  name: string;\n  params: string[];\n  lines: number;\n  returnType: string;\n  calls: Call[];\n  className?: string | undefined;\n  startLine: number;\n  endLine: number;\n  functionHash: string;\n  signatureHash: string;\n  fullText?: string | undefined;\n}\n\n/** Represents detailed type analysis */\nexport interface TypeAnalysis {\n  nodeId: number;\n  file: string;\n  type: QueryType;\n  name: string;\n  fields: { [key: string]: string };\n  implements: string[];\n  implementedBy: string[];\n  extends: string[];\n  extendedBy: string[];\n  scope: Scope[];\n}\n\nexport interface TypeAnalysis_FieldsEntry {\n  key: string;\n  value: string;\n}\n\n/** Represents the complete code graph */\nexport interface CodeGraph {\n  files: { [key: string]: FileAnalysis };\n  functions: { [key: string]: FunctionAnalysis };\n  types: { [key: string]: TypeAnalysis };\n}\n\nexport interface CodeGraph_FilesEntry {\n  key: string;\n  value: FileAnalysis | undefined;\n}\n\nexport interface CodeGraph_FunctionsEntry {\n  key: string;\n  value: FunctionAnalysis | undefined;\n}\n\nexport interface CodeGraph_TypesEntry {\n  key: string;\n  value: TypeAnalysis | undefined;\n}\n"]}