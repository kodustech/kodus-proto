{"version":3,"file":"serializer.js","sourceRoot":"","sources":["../../../common/ast/serializer.ts"],"names":[],"mappings":";;;AAAA,mCAA+C;AAC/C,yCAAqE;AACrE,sDAQuC;AACvC,MAAa,aAAa;IACtB,MAAM,CAAC,kBAAkB,CAAC,KAAgB;QACtC,MAAM,KAAK,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACxD,MAAM,SAAS,GAAG,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;QAChE,MAAM,KAAK,GAAG,EAAE,CAAC;QAEjB,KAAK,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,CAAC;YAC9C,KAAK,CAAC,GAAG,CAAC,GAAG;gBACT,GAAG,IAAI;gBACP,IAAI,EACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC5B,cAAmB,CAAC,sBAAsB;aACjD,CAAC;QACN,CAAC;QAED,OAAO;YACH,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,SAAS;YACpB,KAAK,EAAE,KAAK;SACf,CAAC;IACN,CAAC;IAED,MAAM,CAAC,sBAAsB,CAAC,KAAkB;QAC5C,MAAM,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CACzB,CAAC,CAAC,EAAE,EAAE,CACF,CAAC;YACG,GAAG,CAAC;YACJ,IAAI,EACA,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC;gBACxB,aAAkB,CAAC,qBAAqB;SACjB,CAAA,CACtC,CAAC;QAEF,MAAM,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC,GAAG,CACzC,CAAC,CAAC,EAAE,EAAE,CACF,CAAC;YACG,GAAG,CAAC;YACJ,IAAI,EACA,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,IAAI,CAAC;gBAChC,qBAA0B,CAAC,6BAA6B;SACjC,CAAA,CACtC,CAAC;QAEF,OAAO;YACH,KAAK;YACL,aAAa;SAChB,CAAC;IACN,CAAC;IAEO,MAAM,CAAU,YAAY,GAGhC;QACA,CAAC,iBAAS,CAAC,WAAW,CAAC,EAAE,cAAmB,CAAC,gBAAgB;QAC7D,CAAC,iBAAS,CAAC,eAAe,CAAC,EAAE,cAAmB,CAAC,oBAAoB;QACrE,CAAC,iBAAS,CAAC,UAAU,CAAC,EAAE,cAAmB,CAAC,eAAe;QAC3D,CAAC,iBAAS,CAAC,gBAAgB,CAAC,EAAE,cAAmB,CAAC,qBAAqB;QACvE,CAAC,iBAAS,CAAC,cAAc,CAAC,EAAE,cAAmB,CAAC,mBAAmB;QACnE,CAAC,iBAAS,CAAC,mBAAmB,CAAC,EAC3B,cAAmB,CAAC,wBAAwB;QAChD,CAAC,iBAAS,CAAC,yBAAyB,CAAC,EACjC,cAAmB,CAAC,8BAA8B;QACtD,CAAC,iBAAS,CAAC,YAAY,CAAC,EAAE,cAAmB,CAAC,iBAAiB;KAClE,CAAC;IAEM,MAAM,CAAU,WAAW,GAC/B;QACI,CAAC,mBAAQ,CAAC,KAAK,CAAC,EAAE,aAAkB,CAAC,eAAe;QACpD,CAAC,mBAAQ,CAAC,MAAM,CAAC,EAAE,aAAkB,CAAC,gBAAgB;QACtD,CAAC,mBAAQ,CAAC,QAAQ,CAAC,EAAE,aAAkB,CAAC,kBAAkB;QAC1D,CAAC,mBAAQ,CAAC,SAAS,CAAC,EAAE,aAAkB,CAAC,mBAAmB;KAC/D,CAAC;IAEE,MAAM,CAAU,mBAAmB,GAGvC;QACA,CAAC,2BAAgB,CAAC,KAAK,CAAC,EACpB,qBAA0B,CAAC,uBAAuB;QACtD,CAAC,2BAAgB,CAAC,oBAAoB,CAAC,EACnC,qBAA0B,CAAC,sCAAsC;QACrE,CAAC,2BAAgB,CAAC,UAAU,CAAC,EACzB,qBAA0B,CAAC,4BAA4B;QAC3D,CAAC,2BAAgB,CAAC,OAAO,CAAC,EACtB,qBAA0B,CAAC,yBAAyB;QACxD,CAAC,2BAAgB,CAAC,UAAU,CAAC,EACzB,qBAA0B,CAAC,4BAA4B;QAC3D,CAAC,2BAAgB,CAAC,cAAc,CAAC,EAC7B,qBAA0B,CAAC,gCAAgC;QAC/D,CAAC,2BAAgB,CAAC,OAAO,CAAC,EACtB,qBAA0B,CAAC,yBAAyB;KAC3D,CAAC;;AA3FN,sCA4FC","sourcesContent":["import { CodeGraph, QueryType } from \"./graph\";\nimport { EnrichGraph, NodeType, RelationshipType } from \"./enriched\";\nimport {\n    CodeGraph as SerializedCodeGraph,\n    EnrichGraph as SerializedEnrichGraph,\n    EnrichGraphNode as SerializedEnrichGraphNode,\n    EnrichGraphEdge as SerializedEnrichGraphEdge,\n    QueryType as SerializedQueryType,\n    NodeType as SerializedNodeType,\n    RelationshipType as SerializedRelationshipType,\n} from \"../../gen/NestJs/kodus/ast/v2\";\nexport class ASTSerializer {\n    static serializeCodeGraph(graph: CodeGraph): SerializedCodeGraph {\n        const files = Object.fromEntries(graph.files.entries());\n        const functions = Object.fromEntries(graph.functions.entries());\n        const types = {};\n\n        for (const [key, type] of graph.types.entries()) {\n            types[key] = {\n                ...type,\n                type:\n                    this.queryTypeMap[type.type] ??\n                    SerializedQueryType.QUERY_TYPE_UNSPECIFIED,\n            };\n        }\n\n        return {\n            files: files,\n            functions: functions,\n            types: types,\n        };\n    }\n\n    static serializeEnrichedGraph(graph: EnrichGraph): SerializedEnrichGraph {\n        const nodes = graph.nodes.map(\n            (n) =>\n                ({\n                    ...n,\n                    type:\n                        this.nodeTypeMap[n.type] ??\n                        SerializedNodeType.NODE_TYPE_UNSPECIFIED,\n                } as SerializedEnrichGraphNode)\n        );\n\n        const relationships = graph.relationships.map(\n            (r) =>\n                ({\n                    ...r,\n                    type:\n                        this.relationshipTypeMap[r.type] ??\n                        SerializedRelationshipType.RELATIONSHIP_TYPE_UNSPECIFIED,\n                } as SerializedEnrichGraphEdge)\n        );\n\n        return {\n            nodes,\n            relationships,\n        };\n    }\n\n    private static readonly queryTypeMap: Record<\n        QueryType,\n        SerializedQueryType\n    > = {\n        [QueryType.CLASS_QUERY]: SerializedQueryType.QUERY_TYPE_CLASS,\n        [QueryType.INTERFACE_QUERY]: SerializedQueryType.QUERY_TYPE_INTERFACE,\n        [QueryType.ENUM_QUERY]: SerializedQueryType.QUERY_TYPE_ENUM,\n        [QueryType.TYPE_ALIAS_QUERY]: SerializedQueryType.QUERY_TYPE_TYPE_ALIAS,\n        [QueryType.FUNCTION_QUERY]: SerializedQueryType.QUERY_TYPE_FUNCTION,\n        [QueryType.FUNCTION_CALL_QUERY]:\n            SerializedQueryType.QUERY_TYPE_FUNCTION_CALL,\n        [QueryType.FUNCTION_PARAMETERS_QUERY]:\n            SerializedQueryType.QUERY_TYPE_FUNCTION_PARAMETERS,\n        [QueryType.IMPORT_QUERY]: SerializedQueryType.QUERY_TYPE_IMPORT,\n    };\n\n    private static readonly nodeTypeMap: Record<NodeType, SerializedNodeType> =\n        {\n            [NodeType.CLASS]: SerializedNodeType.NODE_TYPE_CLASS,\n            [NodeType.METHOD]: SerializedNodeType.NODE_TYPE_METHOD,\n            [NodeType.FUNCTION]: SerializedNodeType.NODE_TYPE_FUNCTION,\n            [NodeType.INTERFACE]: SerializedNodeType.NODE_TYPE_INTERFACE,\n        };\n\n    private static readonly relationshipTypeMap: Record<\n        RelationshipType,\n        SerializedRelationshipType\n    > = {\n        [RelationshipType.CALLS]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_CALLS,\n        [RelationshipType.CALLS_IMPLEMENTATION]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_CALLS_IMPLEMENTATION,\n        [RelationshipType.HAS_METHOD]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_HAS_METHOD,\n        [RelationshipType.IMPORTS]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_IMPORTS,\n        [RelationshipType.IMPLEMENTS]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_IMPLEMENTS,\n        [RelationshipType.IMPLEMENTED_BY]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_IMPLEMENTED_BY,\n        [RelationshipType.EXTENDS]:\n            SerializedRelationshipType.RELATIONSHIP_TYPE_EXTENDS,\n    };\n}\n"]}