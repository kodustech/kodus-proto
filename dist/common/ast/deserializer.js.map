{"version":3,"file":"deserializer.js","sourceRoot":"","sources":["../../../common/ast/deserializer.ts"],"names":[],"mappings":";;;AAAA,yCAAqE;AACrE,gDAIiC;AAEjC,MAAa,eAAe;IACxB,wBAAwB,CAAC,UAAiC;QACtD,MAAM,KAAK,GAAG,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;YAC1C,GAAG,IAAI;YACP,IAAI,EAAE,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC;SAC5C,CAAC,CAAC,CAAC;QAEJ,MAAM,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;YAClE,GAAG,YAAY;YACf,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,IAAI,CAAC;SAC5D,CAAC,CAAC,CAAC;QAEJ,OAAO;YACH,KAAK;YACL,aAAa;SAChB,CAAC;IACN,CAAC;IAEO,mBAAmB,CAAC,cAAkC;QAC1D,QAAQ,cAAc,EAAE,CAAC;YACrB,KAAK,aAAkB,CAAC,eAAe;gBACnC,OAAO,mBAAQ,CAAC,KAAK,CAAC;YAC1B,KAAK,aAAkB,CAAC,kBAAkB;gBACtC,OAAO,mBAAQ,CAAC,QAAQ,CAAC;YAC7B,KAAK,aAAkB,CAAC,mBAAmB;gBACvC,OAAO,mBAAQ,CAAC,SAAS,CAAC;YAC9B,KAAK,aAAkB,CAAC,gBAAgB;gBACpC,OAAO,mBAAQ,CAAC,MAAM,CAAC;YAC3B;gBACI,MAAM,IAAI,KAAK,CAAC,sBAAsB,cAAc,EAAE,CAAC,CAAC;QAChE,CAAC;IACL,CAAC;IAEO,2BAA2B,CAC/B,cAA0C;QAE1C,QAAQ,cAAc,EAAE,CAAC;YACrB,KAAK,qBAA0B,CAAC,uBAAuB;gBACnD,OAAO,2BAAgB,CAAC,KAAK,CAAC;YAClC,KAAK,qBAA0B,CAAC,sCAAsC;gBAClE,OAAO,2BAAgB,CAAC,oBAAoB,CAAC;YACjD,KAAK,qBAA0B,CAAC,4BAA4B;gBACxD,OAAO,2BAAgB,CAAC,UAAU,CAAC;YACvC,KAAK,qBAA0B,CAAC,yBAAyB;gBACrD,OAAO,2BAAgB,CAAC,OAAO,CAAC;YACpC,KAAK,qBAA0B,CAAC,4BAA4B;gBACxD,OAAO,2BAAgB,CAAC,UAAU,CAAC;YACvC,KAAK,qBAA0B,CAAC,gCAAgC;gBAC5D,OAAO,2BAAgB,CAAC,cAAc,CAAC;YAC3C,KAAK,qBAA0B,CAAC,yBAAyB;gBACrD,OAAO,2BAAgB,CAAC,OAAO,CAAC;YACpC;gBACI,MAAM,IAAI,KAAK,CAAC,8BAA8B,cAAc,EAAE,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;CACJ;AAvDD,0CAuDC","sourcesContent":["import { EnrichGraph, NodeType, RelationshipType } from \"./enriched\";\nimport {\n    EnrichGraph as SerializedEnrichGraph,\n    NodeType as SerializedNodeType,\n    RelationshipType as SerializedRelationshipType,\n} from \"gen/NestJs/kodus/ast/v2\";\n\nexport class ASTDeserializer {\n    deserializeEnrichedGraph(serialized: SerializedEnrichGraph): EnrichGraph {\n        const nodes = serialized.nodes.map((node) => ({\n            ...node,\n            type: this.deserializeNodeType(node.type),\n        }));\n\n        const relationships = serialized.relationships.map((relationship) => ({\n            ...relationship,\n            type: this.deserializeRelationshipType(relationship.type),\n        }));\n\n        return {\n            nodes,\n            relationships,\n        };\n    }\n\n    private deserializeNodeType(serializedType: SerializedNodeType): NodeType {\n        switch (serializedType) {\n            case SerializedNodeType.NODE_TYPE_CLASS:\n                return NodeType.CLASS;\n            case SerializedNodeType.NODE_TYPE_FUNCTION:\n                return NodeType.FUNCTION;\n            case SerializedNodeType.NODE_TYPE_INTERFACE:\n                return NodeType.INTERFACE;\n            case SerializedNodeType.NODE_TYPE_METHOD:\n                return NodeType.METHOD;\n            default:\n                throw new Error(`Unknown node type: ${serializedType}`);\n        }\n    }\n\n    private deserializeRelationshipType(\n        serializedType: SerializedRelationshipType\n    ): RelationshipType {\n        switch (serializedType) {\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_CALLS:\n                return RelationshipType.CALLS;\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_CALLS_IMPLEMENTATION:\n                return RelationshipType.CALLS_IMPLEMENTATION;\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_HAS_METHOD:\n                return RelationshipType.HAS_METHOD;\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_IMPORTS:\n                return RelationshipType.IMPORTS;\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_IMPLEMENTS:\n                return RelationshipType.IMPLEMENTS;\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_IMPLEMENTED_BY:\n                return RelationshipType.IMPLEMENTED_BY;\n            case SerializedRelationshipType.RELATIONSHIP_TYPE_EXTENDS:\n                return RelationshipType.EXTENDS;\n            default:\n                throw new Error(`Unknown relationship type: ${serializedType}`);\n        }\n    }\n}\n"]}