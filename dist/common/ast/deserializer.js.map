{"version":3,"file":"deserializer.js","sourceRoot":"","sources":["../../../common/ast/deserializer.ts"],"names":[],"mappings":"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","sourcesContent":["import { EnrichGraph, NodeType, RelationshipType } from \"./enriched\";\nimport {\n    EnrichGraph as SerializedEnrichGraph,\n    NodeType as SerializedNodeType,\n    RelationshipType as SerializedRelationshipType,\n    CodeGraph as SerializedCodeGraph,\n    ScopeType as SerializedScopeType,\n    QueryType as SerializedQueryType,\n    AnalysisNode as SerializedAnalysisNode,\n} from \"../../gen/NestJs/kodus/ast/v2\";\nimport {\n    AnalysisNode,\n    CodeGraph,\n    FileAnalysis,\n    FunctionAnalysis,\n    ScopeType,\n    TypeAnalysis,\n    QueryType,\n} from \"./graph\";\n\nexport class ASTDeserializer {\n    static deserializeCodeGraph(serialized: SerializedCodeGraph): CodeGraph {\n        const files = new Map<string, FileAnalysis>(\n            Object.entries(serialized.files)\n        );\n        const functions = new Map<string, FunctionAnalysis>(\n            Object.entries(serialized.functions)\n        );\n        const types = new Map<string, TypeAnalysis>(\n            Object.entries(serialized.types).map(([key, type]) => [\n                key,\n                {\n                    ...type,\n                    type: this.queryTypeMap[type.type] ?? QueryType.CLASS_QUERY, // Default\n                    scope: type.scope.map((scope) => ({\n                        ...scope,\n                        type: this.scopeTypeMap[scope.type] ?? ScopeType.FILE, // Default\n                    })),\n                },\n            ])\n        );\n\n        const deserializeAnalysisNode = (\n            node: SerializedAnalysisNode\n        ): AnalysisNode => ({\n            ...node,\n            queryType:\n                this.queryTypeMap[node.queryType] ?? QueryType.CLASS_QUERY, // Default\n            children: node.children\n                ? node.children.map(deserializeAnalysisNode)\n                : [],\n        });\n\n        const analysisNodes = new Map<number, AnalysisNode>(\n            Object.entries(serialized.analysisNodes).map(([key, node]) => [\n                parseInt(key, 10),\n                deserializeAnalysisNode(node),\n            ])\n        );\n\n        return {\n            files,\n            functions,\n            types,\n            analysisNodes,\n        };\n    }\n\n    static deserializeEnrichedGraph(\n        serialized: SerializedEnrichGraph\n    ): EnrichGraph {\n        const nodes = serialized.nodes.map((node) => ({\n            ...node,\n            type: this.nodeTypeMap[node.type] ?? NodeType.CLASS, // Default\n        }));\n\n        const relationships = serialized.relationships.map((relationship) => ({\n            ...relationship,\n            type:\n                this.relationshipTypeMap[relationship.type] ??\n                RelationshipType.CALLS, // Default\n        }));\n\n        return {\n            nodes,\n            relationships,\n        };\n    }\n\n    private static readonly queryTypeMap: Record<\n        Exclude<\n            SerializedQueryType,\n            | SerializedQueryType.UNRECOGNIZED\n            | SerializedQueryType.QUERY_TYPE_UNSPECIFIED\n        >,\n        QueryType\n    > = {\n        [SerializedQueryType.QUERY_TYPE_CLASS]: QueryType.CLASS_QUERY,\n        [SerializedQueryType.QUERY_TYPE_INTERFACE]: QueryType.INTERFACE_QUERY,\n        [SerializedQueryType.QUERY_TYPE_ENUM]: QueryType.ENUM_QUERY,\n        [SerializedQueryType.QUERY_TYPE_TYPE_ALIAS]: QueryType.TYPE_ALIAS_QUERY,\n        [SerializedQueryType.QUERY_TYPE_FUNCTION]: QueryType.FUNCTION_QUERY,\n        [SerializedQueryType.QUERY_TYPE_FUNCTION_CALL]:\n            QueryType.FUNCTION_CALL_QUERY,\n        [SerializedQueryType.QUERY_TYPE_FUNCTION_PARAMETERS]:\n            QueryType.FUNCTION_PARAMETERS_QUERY,\n        [SerializedQueryType.QUERY_TYPE_IMPORT]: QueryType.IMPORT_QUERY,\n    };\n\n    private static readonly scopeTypeMap: Record<\n        Exclude<\n            SerializedScopeType,\n            | SerializedScopeType.UNRECOGNIZED\n            | SerializedScopeType.SCOPE_TYPE_UNSPECIFIED\n        >,\n        ScopeType\n    > = {\n        [SerializedScopeType.SCOPE_TYPE_FILE]: ScopeType.FILE,\n        [SerializedScopeType.SCOPE_TYPE_CLASS]: ScopeType.CLASS,\n        [SerializedScopeType.SCOPE_TYPE_INTERFACE]: ScopeType.INTERFACE,\n        [SerializedScopeType.SCOPE_TYPE_ENUM]: ScopeType.ENUM,\n        [SerializedScopeType.SCOPE_TYPE_FUNCTION]: ScopeType.FUNCTION,\n        [SerializedScopeType.SCOPE_TYPE_METHOD]: ScopeType.METHOD,\n    };\n\n    private static readonly nodeTypeMap: Record<\n        Exclude<\n            SerializedNodeType,\n            | SerializedNodeType.UNRECOGNIZED\n            | SerializedNodeType.NODE_TYPE_UNSPECIFIED\n        >,\n        NodeType\n    > = {\n        [SerializedNodeType.NODE_TYPE_CLASS]: NodeType.CLASS,\n        [SerializedNodeType.NODE_TYPE_FUNCTION]: NodeType.FUNCTION,\n        [SerializedNodeType.NODE_TYPE_INTERFACE]: NodeType.INTERFACE,\n        [SerializedNodeType.NODE_TYPE_METHOD]: NodeType.METHOD,\n    };\n\n    private static readonly relationshipTypeMap: Record<\n        Exclude<\n            SerializedRelationshipType,\n            | SerializedRelationshipType.UNRECOGNIZED\n            | SerializedRelationshipType.RELATIONSHIP_TYPE_UNSPECIFIED\n        >,\n        RelationshipType\n    > = {\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_CALLS]:\n            RelationshipType.CALLS,\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_CALLS_IMPLEMENTATION]:\n            RelationshipType.CALLS_IMPLEMENTATION,\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_HAS_METHOD]:\n            RelationshipType.HAS_METHOD,\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_IMPORTS]:\n            RelationshipType.IMPORTS,\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_IMPLEMENTS]:\n            RelationshipType.IMPLEMENTS,\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_IMPLEMENTED_BY]:\n            RelationshipType.IMPLEMENTED_BY,\n        [SerializedRelationshipType.RELATIONSHIP_TYPE_EXTENDS]:\n            RelationshipType.EXTENDS,\n    };\n}\n"]}